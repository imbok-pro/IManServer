-- TPar types
-- by Nikolay Krasilnikov
-- This file is distributed under Apache License 2.0 (01.2004).
--   http://www.apache.org/licenses/
-- create 17.08.2010 
-- update 06.09.2010 14.09.2010 16.09.2010 08.10.2010 13.10.2010 20.10.2010
--        28.10.2010 19.11.2010 24.11.2010 10.12.2010 17.12.2010 09.02.2011
--		    18.03.2011 11.05.2011 17.10.2011 10.11.2011 27.01.2012 11.04.2012 
--        04.04.2013 09.04.2013 04.06.2013 17.06.2013 23.08.2013 25.08.2013
--        14.06.2014 26.08.2014 08.07.2015 10.07.2015 19.09.2016 07.10.2016
--        09.02.2017-10.02.2017 28.02.2017 28.01.2019 07.07.2021 21.07.2021
--        25.07.2021 15.09.2021
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
CREATE OR REPLACE TYPE SP.TGPAR 
/*Глобальный параметр.*/
/* SP-TPAR.tps*/
AS OBJECT
(
/* Имя параметра.*/
NAME VARCHAR2(128),
/* Значение параметра.*/
VAL SP.TVALUE,
/* Создание нулл параметра.*/
CONSTRUCTOR FUNCTION TGPAR 
RETURN SELF AS RESULT,
/* Загрузка текущего (из рабочей таблицы) параметра.*/
CONSTRUCTOR FUNCTION TGPAR(NAME IN VARCHAR2) 
RETURN SELF AS RESULT,
/* Функция предоставляет для сравнения строку  состоящую из идентификатора
   типа и преобразованного к строке значения. 
   Возможна ошибка. Если строки длинные и отличаются в последних байтах,
   то будут равны!*/
MAP MEMBER FUNCTION map_globals(self IN OUT NOCOPY SP.TGPAR) RETURN VARCHAR2,
/* Сохранение параметра в рабочюю таблицу).*/
MEMBER PROCEDURE Save(self IN OUT NOCOPY SP.TGPAR)
);
/
GRANT EXECUTE ON SP.TGPAR TO PUBLIC;
--
-------------------------------------------------------------------------------
CREATE OR REPLACE TYPE SP.TCPAR 
/* Параметр объекта каталога.*/
/* SP-TPAR.tps*/
AS OBJECT
(
/* Идентификатор объекта каталого, которому принадлежит параметр.*/
O_ID NUMBER,
/* Идентификатор параметра.*/
P_ID NUMBER,
/* Имя объекта каталого, которому принадлежит параметр.*/
OBJECT_NAME VARCHAR2(128),
/* Имя параметра.*/
NAME VARCHAR2(128),
/* Значение параметра.*/
VAL SP.TVALUE,
/* Модификатор доступа к параметру.*/
R_ONLY NUMBER(1),
/* Группа параметра.*/
GROUP_ID NUMBER,
--
/* Создание параметра и заполнение его значения по его идентификатору в 
таблице параметров.*/
CONSTRUCTOR FUNCTION TCPAR(ParID IN NUMBER)
RETURN SELF AS RESULT,
/* Создание параметра и заполнение его значения по идентификатору объекта и
имени параметра. Если параметр не найден, а объект существует,
то создаём новый параметр.*/
CONSTRUCTOR FUNCTION TCPAR(OBJ IN NUMBER,Par IN VARCHAR2)
RETURN SELF AS RESULT,
/* Создание параметра и заполнение его значения по имени объекта и
имени параметра. Если параметр не найден, а объект существует,
то создаём новый параметр.*/
CONSTRUCTOR FUNCTION TCPAR(OBJ IN VARCHAR2,Par IN VARCHAR2)
RETURN SELF AS RESULT,
/* Сохранение значения параметра в таблицу параметров.*/
MEMBER PROCEDURE Save,
/* Сохранение значения параметра в таблицу параметров, задавая дату изменения и пользователя.*/
MEMBER PROCEDURE Save(MDATE IN DATE, MUSER IN VARCHAR)
);
/
GRANT EXECUTE ON SP.TCPAR TO PUBLIC;
CREATE OR REPLACE PUBLIC SYNONYM TCPAR FOR SP.TCPAR;
-------------------------------------------------------------------------------
CREATE OR REPLACE TYPE SP.TMPAR 
/* Параметр объекта модели.*/
/* SP-TPAR.tps*/
AS OBJECT
(
/* Идентификатор объекта модели*/
MO_ID NUMBER,
/* Идентификатор параметра.
   Если идентификатор параметра объекта модели равен нулл, 
   значит значение этого параметра равно значению по умолчанию.
   Процедура Save при изменении значения добавит параметр в таблицу.
   Если параметр уже в таблице, то он не будет удалён, даже если его значение
   после редактирования станет равно значению по умолчанию.*/
MP_ID NUMBER,
/* Идентификатор параметра в каталоге.
   Если идентификатор параметра объекта каталога равен нулл, 
   значит этот параметр определён в сторонней модели.*/
CP_ID NUMBER,
/* Имя параметра.*/
NAME VARCHAR2(128), 
/* Модификатор записи для параметра определённого в каталоге.*/
R_ONLY NUMBER(1),
/* Значение параметра.*/
VAL SP.TVALUE,
/* Дата создания или изменения параметра объекта. */
MDATE DATE,
/* Пользователь, создавший или изменивший параметр объекта. */
MUSER VARCHAR2(60),
/* При обновлении значения параметра будет автоматически проставлена текущая
дата в поле дата изменения параметра. Если мы хотим присвоить дату отличную от
текущей, то необходимо присвоить этому полю значение отличное от нулл. */
NEW_MDATE DATE,
/* При обновлении значения параметра будет автоматически заполнено поле,
содержащее имя пользователя, изменившего параметр. Если мы хотим присвоить этому
полю значение отличное от имени текущего пользователя, то необходимо присвоить
этому полю значение отличное от нулл. */
NEW_MUSER VARCHAR2(60),
/* Идентификатор группы к которой принадлежит параметр. (Только для чтения.)*/
G_ID NUMBER,
/* Создание параметра модели и заполнение его значения по его идентификатору в 
таблице параметров модели.*/
CONSTRUCTOR FUNCTION TMPAR(ModelParID IN NUMBER)
RETURN SELF AS RESULT,
/* Создание параметра модели и заполнение его значения по идентификатору
объекта модели и имени параметра.*/
CONSTRUCTOR FUNCTION TMPAR(ModelObjID IN NUMBER, Par IN VARCHAR2)
RETURN SELF AS RESULT,
/* Создание параметра модели и заполнение его значения по стороннему 
идентификатору объекта модели, имени параметра и идентификатора модели.
Если идентификатор модели - NULL, то используем текущую модель.*/
CONSTRUCTOR FUNCTION TMPAR(ModelObjOID IN VARCHAR, Par IN VARCHAR2,
                           ModelID IN NUMBER DEFAULT NULL)
RETURN SELF AS RESULT,
/* Функция возвращает полное имя объекта модели.*/
MEMBER FUNCTION OBJECT_NAME RETURN VARCHAR2,
/* Функция возвращает имя группы к которой принадлежит параметр.*/
MEMBER FUNCTION GROUP_NAME RETURN VARCHAR2,
/* Сохранение значения параметра в таблицу параметров. Процедура заполняет
идентификатор параметра, если параметр имел значение по умолчанию.
Если не установлен параметр BlockHistory, то старое значение будет занесено
в историю.*/
MEMBER PROCEDURE Save(self IN OUT NOCOPY SP.TMPAR,
                      BlockHistory in BOOLEAN default false),
/* Сохранение значения входного параметра "V" в таблицу параметров в качестве
нового значения параметра, если значение "V" не совпадает с текущим значением 
параметра self.Val. Процедура заполняет идентификатор параметра, если параметр
имел значение по умолчанию.*/
MEMBER PROCEDURE Save(self IN OUT NOCOPY SP.TMPAR, V in SP.TVALUE)
);
/
GRANT EXECUTE ON SP.TMPAR TO PUBLIC;
CREATE OR REPLACE PUBLIC SYNONYM TMPAR FOR SP.TMPAR;

-------------------------------------------------------------------------------
BEGIN
  EXECUTE IMMEDIATE('
CREATE OR REPLACE TYPE SP.TMPARS 
/* Таблица значений, содержащая параметры объекта модели.*/
/* SP-TPAR.tps*/
IS TABLE OF SP.TMPAR 
                   ');
END;
/

-------------------------------------------------------------------------------
CREATE OR REPLACE TYPE SP.TPAR_STORY_REC 
/* Запись, содержащая значение параметра объекта модели.*/
/* SP-TPAR.tps*/
AS OBJECT
(
/* Идентификатор записи истории.*/
ID NUMBER,
/* Имя значения параметра (для именованных значений).*/
E VARCHAR2(128),
/* Значение параметра.*/
N NUMBER,
/* Значение параметра.*/
D DATE,
/* Значение параметра.*/
S VARCHAR2(4000),
/* Значение параметра.*/
X NUMBER,
/* Значение параметра.*/
Y NUMBER,
/* Дата изменения значения параметра.*/
MDATE DATE,
/* Пользователь изменивший значение параметра.*/
MUSER VARCHAR2(60)
);
/
GRANT EXECUTE ON SP.TPAR_STORY_REC TO PUBLIC;

-------------------------------------------------------------------------------
BEGIN
  EXECUTE IMMEDIATE('
CREATE OR REPLACE TYPE SP.TPAR_STORY 
/* Таблица значений, содержащая историю изменения значения параметра.*/
/* SP-TPAR.tps*/
IS TABLE OF SP.TPAR_STORY_REC 
                   ');
END;
/

GRANT EXECUTE ON SP.TPAR_STORY TO PUBLIC;

-------------------------------------------------------------------------------
CREATE OR REPLACE TYPE SP.TSPAR 
/* История параметра объекта модели.*/
/* SP-TPAR.tps*/
AS OBJECT
(
/* Идентификатор объекта модели*/
MO_ID NUMBER,
/* Идентификатор параметра в каталоге.*/
CP_ID NUMBER,
/* Имя параметра.*/
NAME VARCHAR2(128), 
/* Значение параметра по умолчанию из каталога или нулл, если оно ни разу
   не было получено из каталога (тип создан неполными конструкторами).*/
DefVAL SP.TVALUE,
/* Текущее значение параметра в модели или
   нулл, если значение параметра определено только в каталоге.*/
CurVAL SP.TVALUE,
/* Текущая дата создания или изменения параметра объекта(в модели) или
   нулл, если значение параметра определено только в каталоге.*/
CurDate DATE,
/* Пользователь, создавший или изменивший параметр объекта модели или
   нулл, если значение параметра определено только в каталоге. */
CurUSER VARCHAR2(60),
/* Дата на которую запрошено значение параметра значение параметра.
   Если в истории изменения есть значения с датой меньшей чем запрошенная, 
   то будет взято бижайшее меньшее значение.
   Если в истории значения нет, а в модели параметр изменён ранее, чем дата
   запроса, то будет получено значение из параметров модели, иначе использовано
   значение по умолчанию.
   Если при создании параметра не использована дата, то значение параметра -
   текущее (совпадает с TMPAR). Если Объект был создан после запрошенной даты 
   или значение у объета не изменялось, то параметр получит значение
   по умолчанию. */
CDATE DATE,
/* Значение параметра с учётом истории.*/
VAL SP.TVALUE,
/* Дата создания или изменения параметра объекта с учётом истории.
   Или нулл, если текущее значение - есть значение, определённое в каталоге. */
MDATE DATE,
/* Пользователь создавший или изменивший параметр объекта с учётом истории.
   Или нулл, если текущее значение - есть значение, определённое в каталоге. */
MUSER VARCHAR2(60),
/* 
Создание объекта истории параметра по идентификату параметра модели.
   Значение параметра не определено! Конструктор предназначен для создания
   заготовки по наполнению существующего параметра историей.
*/
CONSTRUCTOR FUNCTION TSPAR(ModelParID IN NUMBER)
RETURN SELF AS RESULT,
/* Создание объекта истории параметра модели по идентификатору
объекта модели и имени параметра на текущую дату.
*/
CONSTRUCTOR FUNCTION TSPAR(ModelObjID IN NUMBER, Par IN VARCHAR2)
RETURN SELF AS RESULT,
/* Создание объекта истории параметра модели по объекту параметра модели.*/
CONSTRUCTOR FUNCTION TSPAR(ModelObjPar IN SP.TMPAR)
RETURN SELF AS RESULT,
/* Создание объекта истории параметра модели по идентификатору
   объекта модели и имени параметра на дату, заданную третьим параметром.
   Конструктор заполняет значение по умолчанию и текущее значение,
   если оно существует.
   Поле VAL получит значение по умолчанию, если отсутствует как текущее
   значение, так и история, а так же если все даты больше "D".
   Поле VAL получит значение наиболее близкое к "D", но меньшее чем "D".
*/
CONSTRUCTOR FUNCTION TSPAR(ModelObjID IN NUMBER, Par IN VARCHAR2, D IN DATE)
RETURN SELF AS RESULT,
/* Функция возвращает полное имя объекта модели.*/
MEMBER FUNCTION OBJECT_NAME RETURN VARCHAR2,
/* Функция предоставляет значение на дату.(см. Конструктор на дату) 
  функция заполняет дату по умолчанию и текущее значение, если они неопределены.
  Реальную дату изменения параметра можно посмотреть в поле MDATE.
*/
MEMBER FUNCTION Get_Value(self IN OUT NOCOPY SP.TSPAR, D IN DATE) 
RETURN SP.TVALUE,
/* Функция предоставляет таблицу с историей изменения значения параметра.
   Текущее значение имеет поле ID равное null
*/
MEMBER FUNCTION Get_Values RETURN SP.TPAR_STORY pipelined,
/* Сохранение значения параметра в таблицу истории.*/
MEMBER PROCEDURE Add_Value
);
/
GRANT EXECUTE ON SP.TSPAR TO PUBLIC;
CREATE OR REPLACE PUBLIC SYNONYM TSPAR FOR SP.TSPAR;


-- end of file
