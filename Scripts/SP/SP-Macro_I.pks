CREATE OR REPLACE PACKAGE SP.MACRO_I
-- Macros execution
-- by Nikolay Krasilnikov
-- This file is distributed under Apache License 2.0 (01.2004).
--   http://www.apache.org/licenses/
-- create 07.09.2010
-- update 16.12.2015 21.12.2015 23.12.2015 10.02.2016 22.02.2016 29.02.2016
--        03.03.2016 08.03.2016 10.03.2016

-- Процедуры этого пакета работают в отдельной сессии,
-- асинхронно с пакетом MACRO, за исключением отладочного режима.
-- Отладочный режим включается установкой флага THREADS.EXEC.FlagDebug.
AS

-- При выполнении макропроцедуры, производиться опрос сигнала приостановки
-- выполнения макропроцедуры.
-- Если сигнал обнаружен, то производится приостановка выполнения.
Signal VARCHAR2(128);

-- Состояние макропроцедуры.
MacroState VARCHAR2(256) := G.MS_NotDef;

-- Текущая макрокоманда.
CurCmd NUMBER;

-- Текущая макропроцедура.
-- Если это переменная равна нулл, то макропроцедура завершена.
-- Если состояние готов, и значение не нулл, то процедура находится в состоянии
-- запуска ожидается установка опорного объекта или ввода параметров.
CurMacro NUMBER;

--Идентификатор потока выполнения.
ThID PLS_INTEGER;

type TEV is table of SP.M_ERRORS_AND_WARNINGS%rowtype; 
type TLOG is table of SP.M_LOG%rowtype; 
type TWCPars is table of SP.WORK_COMMAND_PAR_S%rowtype; 

-- При возникновении ошибки, передаём состояние потока "0" и состояние
-- макропроцедуры G.MS_ERROR. Для того чтобы прочесть сообщение об ошибке
-- необходимо перекинуть их между потоками при помощи процедуры
-- getErrorsAndWarnings.

-- Процедура устанавливает состояние макропроцедуры. При опросе состояния потока
-- состояние макропроцедуры передаётся в качестве поля THREADS.Exec.TState.Mess.
procedure setState(State in VARCHAR2);

-- Процедура заполняет массив объектов, выбранных пользователем в модели,
-- по их идентификаторам, переданным через массив чисел ("SELECTED") потока.
procedure setSelected;

-- Приступаем или продолжаем процесс выполнения макрокоманды,
-- остановленный по требованию пользователя или в связи с ожиданием
-- реакции пользователя.
-- Перед началом выполнения макропроцедуры необходимо заполнить переменную 
-- CurMacro и временную таблицу параметров (SP.WORK_COMMAND_PARS).
-- После каждого шага проверяем сигнал паузы.
-- Если установлен сигнал, то приостанавливаем выполнение.
-- После завершения выполнения функция передаёт протокол.
-- После передачи протокол очищается. 
-- Перечень ошибок и предупреждений необходимо читать через вызов функции 
-- getErrorsAndWarnings.
-- После выполнения функция передаёт состояние готов и состояние макропроцедуры
-- в поле сообщения состояния.
-- Если состояние MS_READY, то необходимо запустить макропроцедуру.
-- Если параметр byStep не нулл, то то будет выполнена только одна очередная 
-- макрокоманда текущей макропроцедуры.   
procedure ContinueMacro(byStep in VARCHAR2 default '');

-- Функция возвращает содержимое временной таблицы WORK_COMMAND_PAR_S.
function getPars return TWCPars pipelined;

-- Получение текущей позиции корневого объекта дерева модели.
function getRoot return SP.TIMAN_PARS pipelined;

-- Установка текущей позиции корневого объекта дерева модели.
-- Процедура устанавливает положение корневого объекта в соответствии с 
-- идентификатором объекта. Идентификатор "0" соответствует корню иерархии
-- текущей модели.
-- Изменить текущую модель можно, обновив соответствующий глобальный параметр.
procedure setRoot(RootID in NUMBER);

END MACRO_I;
/