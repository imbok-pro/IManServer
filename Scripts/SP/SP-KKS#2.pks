CREATE OR REPLACE PACKAGE SP.KKS#2
AS
-- Работа с кодами KKS в двухбуквенной начальной иерархии
-- см. документ 
-- PM01.TJ. Ввод данных проектных позиций электротехнической части.docx
-- в папке ...\vm-polinom\Scripts\Data\Hydro\TJ\00.Docs\
-- by PF
-- This file is distributed under Apache License 2.0 (01.2004).
--   http://www.apache.org/licenses/
-- create 2021-06-22
-- update 2021-06-23:2021-06-27
--==============================================================================
-- Отображение имен таксонов первого и второго уровня 
-- (однобуквенных и двухбуквенных) в ID соответсвующих узлов иерархии
Type AA_Taxon2ID Is Table Of Number Index By Varchar2(2);
--==============================================================================
--Устанавливает KKS#ROOT#ID := Null 
Procedure ClearKKS_RootID;

--==============================================================================
--Возвращает ID объекта с именем 'Проектные позиции' текущей модели
Function GetKKS_RootID Return Number;

--==============================================================================
--Возвращает имена и ID таксонов первого и второго уровня классификатора 
-- проектных позиций текущей локальной модели.
--В случае их отсутсвия, возвращаются пустые ассоциативные массивы.
--Tax1_AA$ ассоциативный массив однобуквенных таксонов
--Tax2_AA$ ассоциативный массив двухбуквенных таксонов
Procedure GetTaxons12Level
(Tax1_AA$ in out NoCopy AA_Taxon2ID, Tax2_AA$ in out NoCopy AA_Taxon2ID);
--==============================================================================
--Возвращает имена и ID систем и подсистем классификатора 
-- проектных позиций текущей локальной модели.
--В случае их отсутсвия, возвращется пустой ассоциативный массив.
--SubSys_AA$ ассоциативный массив систем и подсистем
Procedure GetSubSystems
(SubSys_AA$ in out NoCopy SP.TJ_WORK.AA_ObjName2ID);
--==============================================================================
--  Выделяет KKS-код из диапазона ячеек ряда KOCEL
--
--  Длина диапазона - это IColMax$-IColMin$+1, 
--  т.е. количество символов в коде KKS
--  В настоящее время функция обрабатывает только диапазоны длиной 7, и 12
--  При обработке диапазанов длиной 7 функция возвращает в переменную KKSFull$
--  только коды систем и подстистем длиной 7 (ex: 00SAS03).
--  При обработке диапазона длиной 12 функция возвращает  в переменную KKSFull$ 
--  коды систем и подсистем длиной 7 (ex: 00SBB03), 
--  либо коды устройств длиной 12 (ex: 00SBB03BR005).
--  При других длинах диапазона функция возбуждает исключение.
Function GetKKS(
kRow$ In KOCEL.CELL.TRow      --вх: анализируемый ряд листа книги KOCEL
, IColMin$ In BINARY_INTEGER  --вх: начало диапазона номеров колонок KKS
, IColMax$ In BINARY_INTEGER  --вх: конец диапазона номеров колонок KKS
, BuffLog$ In Out NOCopy DEBUG_LOG.TBUFF_LOG  -- буфер вывода ошибок вх.данных
, SysNum$ In Out varchar2     --вых: номер системы (2)
, SysCode$ In Out Varchar2    --вых: код системы (3)
, SubSysNum$ In Out varchar2  --вых: номер подсистемы (2)
, UnitCode$ In Out Varchar2   --вых: код устройства в составе системы (5)
, KKSFull$  In Out Varchar2   --вых: полный код KKS (7 или 12)
) Return Boolean;
--==============================================================================
--Возвращает ID объекта по ID его непосредственного предка
-- или Null
Function GetChildID(ParentID$ In Number, UnitName$ In Varchar2) Return Number;
--==============================================================================
End KKS#2;